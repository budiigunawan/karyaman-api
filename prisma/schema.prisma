// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  email         String         @unique
  password      String
  fullName      String
  phone         String
  isAdmin       Boolean        @default(false)
  isActive      Boolean        @default(true)
  refreshTokens RefreshToken[]
  employed      DateTime       @default(now())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  role          Role           @relation(fields: [roleId], references: [id])
  roleId        String
  attendances   Attendance[]
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Role {
  id    String @id @unique @default(uuid())
  name  String
  users User[]
}

model Attendance {
  id       String   @id @unique @default(uuid())
  clockIn  DateTime
  clockOut DateTime
  pointIn  String
  pointOut String
  imgIn    String
  imgOut   String
  user     User     @relation(fields: [userId], references: [id])
  userId   String
}
